#include <iostream>
#include <string>
#include <algorithm> // For std::reverse
using namespace std;

// Function to check if a string is a palindrome
bool isPalindrome(const string& str) {
    string reversedStr = str;
    reverse(reversedStr.begin(), reversedStr.end());
    return str == reversedStr;
}

// Function to count palindromic shifts
#include <iostream>
#include <string>
#include <bits/stdc++.h>
using namespace std;

bool isPalindrome (string& str)
{
    string reversedstr = str;
    reverse(reversedstr.begin(), reversedstr.end());
    return reversedstr == str;
}

int countPalindromicShifts(string str) {
    int lans = 0;
    int rans=0;
    int ans =0;
    int n = str.length();

    for (int i = 0; i < n; i++) {
        str = str.substr(1) + str[0]; 
        if (isPalindrome(str)) {
            lans++;
            break;
        }
    }

    str = str.substr(n - 1) + str.substr(0, n - 1);

    for (int i = 0; i < n; i++) {
        str = str[n - 1] + str.substr(0, n - 1);
        if (isPalindrome(str)) {
            rans++;
            break;
        }
    }
    if(lans==0 && rans==0)
    return -1;
    else
    ans = min(lans,rans);
    return ans;
}

int main() {
    string str;
    cout << "Enter a string: ";
    cin >> str;
    if(isPalindrome(str))
    {
        cout<< 0;
        return 0;
    }
    int result = countPalindromicShifts(str);
    
    cout << result << endl;

    return 0;
}
